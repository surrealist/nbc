@model NBC.Models.Unit

@{
    Layout = null;
}

<!DOCTYPE html>
<body>

    @using (Html.BeginForm("Edit", "Units", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.Label("ชื่อ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("ชื่อย่อ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("บ้านเลข", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.No, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.No, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("หมู่ที่", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.Moo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.Moo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("ชั้น", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.Floor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.Floor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("ตึก/อาคาร", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.Building, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.Building, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("หมู่บ้าน", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.MooBan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.MooBan, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("ซอย", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.Soi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.Soi, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("ถนน", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.Road, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.Road, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.Adress.Province_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.Province_Id, new { htmlAttributes = new { @class = "provinceID form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.Province_Id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.Adress.ProvinceName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.ProvinceName, new { htmlAttributes = new { @class = "provinceName form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.ProvinceName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("จังหวัด", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectProvince">
                        <option selected value="-1">กรุณาเลือก</option>
                    </select>
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.Adress.Amphur_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.Amphur_Id, new { htmlAttributes = new { @class = "amphurID form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.Amphur_Id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.Adress.AmphurName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.AmphurName, new { htmlAttributes = new { @class = "amphurName form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.AmphurName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("อำเภอ/เขต", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectAmphur">
                        <option selected value="-1">กรุณาเลือก</option>
                    </select>
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.Adress.Tambol_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.Tambol_Id, new { htmlAttributes = new { @class = "tambolId form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.Tambol_Id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.Adress.TambolName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.TambolName, new { htmlAttributes = new { @class = "tambolName form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.TambolName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("ตำบล/แขวง", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectTambol">
                        <option selected value="-1">กรุณาเลือก</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("รหัสไปรษณีย์", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adress.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("เบอร์โทร", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("อีเมลล์", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label(" ผู้ประสาน", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContactPersonName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactPersonName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("เบอร์ติดต่อผู้ประสาน", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConactPersonTel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConactPersonTel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("E-mail ผู้ประสาน", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContactPersonEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactPersonEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("หัวหน้าโครงการ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HeadPersonName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HeadPersonName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("เบอร์ติดต่อหัวหน้าโครงการ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HeadPersonTel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HeadPersonTel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("E-mail หัวหน้าโครงการ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HeadPersonEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HeadPersonEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("หมายเหตุ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="บันทึก" class="openCreateBox btn btn-primary btn-xs" />
                    @Html.ActionLink("ย้อนกลับ", "Index", "Units", null, new { @class = "openCreateBox btn btn-primary btn-xs" })
                </div>
            </div>
        </div>
    }


</body>
<script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-1.12.3.js"></script>

<script>
    $(document).ready(function () {
        var selectedId = $('.provinceID').val();
        var url = "/Admin/MasAmphurs/DDLProvince";
        var $jsontwo = $('.selectProvince');
        $jsontwo.empty();
        $jsontwo.append($("<option />").val(-1).text("กรุณาเลือก"));
        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (data) {
                var obj = data;
                $.each(obj, function (index, value) {
                    var name = value["Name"];
                    var id = value["Id"];
                    if (selectedId == id) {
                        $jsontwo.append($("<option selected />").val(id).text(name));

                    }
                    else {
                        $jsontwo.append($("<option />").val(id).text(name));
                    }
                });
                //var max = getMax(data, 'Id');

                //alert(max.Id);
            }
        });

        var PId = $('.selectProvince').val();
        selectedId = $('.amphurID').val();
        url = "/Admin/SVs/DDLAmphur/" + PId;
        var $jsontwo = $('.selectAmphur');
        $jsontwo.empty();
        $jsontwo.append($("<option />").val(-1).text("กรุณาเลือก"));
        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (data) {
                var obj = data;
                $.each(obj, function (index, value) {
                    var name = value["Name"];
                    var id = value["Id"];
                    if (selectedId == id) {
                        $jsontwo.append($("<option selected />").val(id).text(name));
                    }
                    else {
                        $jsontwo.append($("<option />").val(id).text(name));
                    }
                });
            }
        });
        var AId = $('.selectAmphur').val();
        selectedId = $('.tambolId').val();
        url = "/Admin/SVs/DDLTambol/" + AId;
        var $jsontwo = $('.selectTambol');
        $jsontwo.empty();
        $jsontwo.append($("<option />").val(-1).text("กรุณาเลือก"));
        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (data) {
                var obj = data;
                $.each(obj, function (index, value) {
                    var name = value["Name"];
                    var id = value["Id"];
                    if (selectedId == id) {
                        $jsontwo.append($("<option selected />").val(id).text(name));
                    }
                    else {
                        $jsontwo.append($("<option />").val(id).text(name));
                    }
                });
            }
        });
    });
    $('.selectProvince').change(function () {
        // alert($('.selectProvince').val());
        var PId = $('.selectProvince').val();
        var url = "/Admin/SVs/DDLProvince";
        var pName;
        var max;
        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (data) {
                var obj = data;

                $.each(obj, function (index, value) {
                    var name = value["Name"];
                    var id = value["Id"];
                    if (id == PId) {
                        pName = name;
                    }
                });

            }

        });



        $('.provinceID').val($('.selectProvince').val());
        $('.provinceName').val(pName);
        $('.amphurID').val("");
        $('.amphurName').val("");
        $('.tambolId').val("");
        $('.tambolName').val("");


    });

    $('.selectProvince').change(function () {
        var PId = $('.selectProvince').val();
        var selectedId = $('.amphurID').val();
        url = "/Admin/SVs/DDLAmphur/" + PId
        var $jsontwo = $('.selectAmphur');
        $jsontwo.empty();
        $jsontwo.append($("<option />").val(-1).text("กรุณาเลือก"));
        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (data) {
                var obj = data;
                $.each(obj, function (index, value) {
                    var name = value["Name"];
                    var id = value["Id"];
                    $jsontwo.append($("<option />").val(id).text(name));

                });
                //var max = getMax(data, 'Id');

                //alert(max.Id);
            }
        });
        var AId = $('.selectAmphur').val();
        selectedId = $('.tambolId').val();
        url = "/Admin/SVs/DDLTambol/" + AId;
        var $jsontwo = $('.selectTambol');
        $jsontwo.empty();
        $jsontwo.append($("<option />").val(-1).text("กรุณาเลือก"));
        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (data) {
                var obj = data;
                $.each(obj, function (index, value) {
                    var name = value["Name"];
                    var id = value["Id"];
                    if (selectedId == id) {
                        $jsontwo.append($("<option selected />").val(id).text(name));
                    }
                    else {
                        $jsontwo.append($("<option />").val(id).text(name));
                    }
                });
            }
        });
    });
    $('.selectAmphur').change(function () {
        // alert($('.selectProvince').val());
        var PId = $('.selectProvince').val();
        var AId = $('.selectAmphur').val();
        var url = "/Admin/SVs/DDLAmphur/" + PId;
        var aName;
        var max;
        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (data) {
                var obj = data;

                $.each(obj, function (index, value) {
                    var name = value["Name"];
                    var id = value["Id"];
                    if (id == AId) {
                        aName = name;
                    }
                });

            }

        });



        $('.amphurID').val(AId);
        $('.amphurName').val(aName);
        $('.tambolId').val("");
        $('.tambolName').val("");

    });
    $('.selectAmphur').change(function () {
        // alert($('.selectProvince').val());

        var AId = $('.selectAmphur').val();
        selectedId = $('.tambolId').val();
        url = "/Admin/SVs/DDLTambol/" + AId;
        var $jsontwo = $('.selectTambol');
        $jsontwo.empty();
        $jsontwo.append($("<option />").val(-1).text("กรุณาเลือก"));
        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (data) {
                var obj = data;
                $.each(obj, function (index, value) {
                    var name = value["Name"];
                    var id = value["Id"];
                    if (selectedId == id) {
                        $jsontwo.append($("<option selected />").val(id).text(name));
                    }
                    else {
                        $jsontwo.append($("<option />").val(id).text(name));
                    }
                });
            }
        });

    });
    $('.selectTambol').change(function () {
        // alert($('.selectProvince').val());
        var AId = $('.selectAmphur').val();
        var TId = $('.selectTambol').val();
        var url = "/Admin/SVs/DDLTambol/" + AId;
        var tName;

        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (data) {
                var obj = data;

                $.each(obj, function (index, value) {
                    var name = value["Name"];
                    var id = value["Id"];
                    if (id == TId) {
                        tName = name;
                    }
                });

            }

        });



        $('.tambolId').val(TId);


        $('.tambolName').val(tName);
        // $('.amphurID').val(max.Id);

    });
</script>

